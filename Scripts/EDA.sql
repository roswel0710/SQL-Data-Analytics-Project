--=================================================
--Databese Exploraion
--=================================================
SELECT *
FROM information_schema.Tables

SELECT*
FROM information_schema.columns
WHERE table_name= 'dim_customers'

--=================================================
--Exploring Dimensions
--=================================================

--Exploring all countries
Select Distinct country
FROM gold.dim_customers

--Exploring all categories and subcategories
Select Distinct category, subcategory, product_name
FROM gold.dim_products
ORDER BY 1,2,3

--=================================================
--Date Exploration
--=================================================

--Find the date of first and last order and how many years of sales available
SELECT MIN(order_date) as first_order_date,
MAX(order_date) as last_order_date,
DATE_PART('year',AGE(MAX(order_date), MIN(order_date))) as order_range_years
FROM gold.fact_sales

--Find youngest and Oldest Customer
SELECT MIN(birthdate) as oldest_birthdate,
DATE_PART('year',Age(Current_date, MIN(birthdate))) oldest_age,
MAX(birthdate) as youngest_birthdate,
DATE_PART('year',Age(Current_date, MAX(birthdate))) youngest_age
FROM gold.dim_customers

--=================================================
--Measures Exploration
--=================================================
--Find the total sales
SELECT SUM(sales_amount) total_sales
FROM gold.fact_sales
--FInd how many items are sold
SELECT SUM(quantity) items_sold
FROM gold.fact_sales
--Find the average selling price
SELECT AVG(price) Avg_selling_price
FROM gold.fact_sales
--Find the total number of orders
SELECT COUNT(order_number) total_no_of_orders,
COUNT(DISTINCT order_number) unique_no_of_orders
FROM gold.fact_sales
--Find the total number of products
SELECT COUNT(DISTINCT product_key) total_products
FROM gold.dim_products
--Find the total numbere of customers
SELECT COUNT(DISTINCT customer_id) total_customers
FROM gold.dim_customers
--Find the total numner of customers that has places an ORDER
SELECT COUNT(DISTINCT customer_key) total_customers
FROM gold.fact_sales

--Generate a report that shows all key metrics of the business
SELECT 'Total Sales' as measuure_name,SUM(sales_amount) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity' as measuure_name, SUM(quantity) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Average Selling Price' as measuure_name, AVG(quantity) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Number of Orders' as measuure_name, COUNT(order_number) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Unique Number of Orders' as measuure_name, COUNT(DISTINCT order_number) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Products' as measuure_name, COUNT(DISTINCT product_key) AS measure_value FROM gold.dim_products
UNION ALL
SELECT 'Total Number of Customers' as measuure_name, COUNT(DISTINCT customer_id) AS measure_value FROM gold.dim_customers
UNION ALL
SELECT 'Total Number of Customers who placed orders' as measuure_name, COUNT(DISTINCT customer_key) AS measure_value FROM gold.fact_sales

--=================================================
--Magnitute Analysis
--=================================================

--Find the total number of customers by country
SELECT COALESCE (country,'Unknown') COUNTRY,
COUNT(DISTINCT customer_id) total_customers
FROM gold.dim_customers
GROUP BY COALESCE (country,'Unknown')
ORDER BY total_customers DESC

-- Find total customers by gender
SELECT Gender,
COUNT(Customer_id) as total_customers
FROM gold.dim_customers
GROUP BY gender

--Find the total products by category
SELECT COALESCE(category,'Unknown'),
COUNT(product_id)
FROM gold.dim_products
GROUP BY category
ORDER BY 2 DESC

--Find the average cost in each category
SELECT COALESCE(category,'Unknown'),
ROUND(AVG(Cost),0) as avg_cost
FROM gold.dim_products
GROUP BY category
ORDER BY 2 DESC

--Find the Total revenue generated for each category
SELECT p.category,
SUM(s.sales_amount) as total_revenue
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p
ON p.product_key = s.product_key
GROUP BY p.category

--Find the total revenue generated by each customer
SELECT c.customer_key,
c.first_name,
c.last_name,
SUM(s.sales_amount) as total_sales
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c
ON c.customer_key = s.customer_key
GROUP BY 1,2,3
ORDER BY 4 DESC

--Find the distribution of sold items across countries
SELECT c.country,
SUM(s.quantity) as total_sales
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c
ON c.customer_key = s.customer_key
GROUP BY 1
ORDER BY 2 DESC

--=================================================
--Ranking Analysis
--=================================================

--WHich 5 products generate the highgest revenue
SELECT p.product_name,
SUM(s.sales_amount) as total_revenue
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p
ON p.product_key = s.product_key
GROUP BY p.product_name
ORDER BY total_revenue DESC
LIMIT 5

SELECT p.product_name,
SUM(s.sales_amount) as total_revenue,
ROW_NUMBER() OVER (ORDER BY SUM(s.sales_amount)DESC) rank_product
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p
ON p.product_key = s.product_key
GROUP BY p.product_name
LIMIT 5

--WHich 5 products generate the lowest revenue
SELECT p.product_name,
SUM(s.sales_amount) as total_revenue
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p
ON p.product_key = s.product_key
GROUP BY p.product_name
ORDER BY total_revenue ASC
LIMIT 5

SELECT p.product_name,
SUM(s.sales_amount) as total_revenue,
ROW_NUMBER() OVER (ORDER BY SUM(s.sales_amount)) rank_product
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p
ON p.product_key = s.product_key
GROUP BY p.product_name
LIMIT 5

--Find top 10 customers who have generated the highest revenue
SELECT c.customer_key,
c.first_name,
c.last_name,
SUM(s.sales_amount) as total_sales,
ROW_NUMBER() OVER(ORDER BY SUM(s.sales_amount) DESC) Rank
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c
ON c.customer_key = s.customer_key
GROUP BY 1,2,3
LIMIT 10